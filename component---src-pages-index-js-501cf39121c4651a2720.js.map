{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["TItleSpan","styled","span","DateSpan","BlogIndex","props","changePageHandler","type","console","log","setState","pageType","state","render","data","this","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","postIndex","location","className","map","node","frontmatter","fields","slug","key","style","height","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","display","justifyContent","alignItems","length","width","backgroundColor","React","Component"],"mappings":"2NAWMA,EAAYC,IAAOC,KAAV,uEAAGD,CAAH,0DAMTE,EAAWF,IAAOC,KAAV,sEAAGD,CAAH,wEAMRG,E,YACJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAMFC,kBAAoB,SAACC,GACnBC,QAAQC,IAAIF,GACZ,EAAKG,SAAS,CAAEC,SAAUJ,KAP1B,EAAKK,MAAQ,CACXD,SAAU,QAHK,E,oCAYnBE,OAAA,WAAU,IACAC,EAASC,KAAKV,MAAdS,KACFE,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MACjCC,EAAY,EAuDhB,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKV,MAAMmB,SAAUL,MAAOH,GAC5C,yBAAKS,UAAU,QAtDjB,oCACE,kBAAC,IAAD,CAAKN,MAAM,cACVC,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZJ,GAAwB,EAExB,IAAMJ,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,yBAAKE,MAAO,CAAEC,OAAQ,UACtB,gCACE,kBAACjC,EAAD,CACEgC,MAAO,CACLE,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMH,MAAO,CAAEI,UAAU,QAAWC,GAAIV,EAAKE,OAAOC,MACjDX,IAGL,6BACA,kBAAChB,EAAD,KAAWwB,EAAKC,YAAYU,OAE9B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,YAInD,yBACEV,MAAO,CACLC,OAAQ,OACRU,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGbtB,IAAcH,EAAM0B,QACnB,yBACEd,MAAO,CACLe,MAAO,OACPd,OAAQ,SACRe,gBAAiB,sB,GA9DfC,IAAMC,WAkIf9C,a","file":"component---src-pages-index-js-501cf39121c4651a2720.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nimport \"../../css/global.css\";\nimport styled from \"styled-components\";\n\nconst TItleSpan = styled.span`\n  font-size: 26px;\n  font-weight: 900;\n\n  text-decoration: none;\n`;\nconst DateSpan = styled.span`\n  font-size: 18px;\n  font-weight: 900;\n  color: #07de44;\n  text-decoration: none;\n`;\nclass BlogIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageType: \"post\",\n    };\n  }\n\n  changePageHandler = (type) => {\n    console.log(type);\n    this.setState({ pageType: type });\n  };\n\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n    var postIndex = 0;\n\n    const post = () => (\n      <>\n        <SEO title=\"All posts\" />\n        {posts.map(({ node }) => {\n          postIndex = postIndex + 1;\n\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <article key={node.fields.slug}>\n              <div style={{ height: \"30px\" }}></div>\n              <header>\n                <TItleSpan\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </TItleSpan>\n                <br></br>\n                <DateSpan>{node.frontmatter.date}</DateSpan>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n              <div\n                style={{\n                  height: \"40px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {postIndex !== posts.length && (\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"0.2rem\",\n                      backgroundColor: \"#000000\",\n                    }}\n                  ></div>\n                )}\n              </div>\n            </article>\n          );\n        })}\n      </>\n    );\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <div className=\"m-10\">{post()}</div>\n        {/* <SEO title=\"All posts\" /> */}\n        {/* <Bio /> */}\n        {/* {posts.map(({ node }) => {\n          postIndex = postIndex + 1;\n\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <article key={node.fields.slug}>\n              <div style={{ height: \"30px\" }}></div>\n              <header>\n                <TItleSpan\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </TItleSpan>\n                <br></br>\n                <DateSpan>{node.frontmatter.date}</DateSpan>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n              <div\n                style={{\n                  height: \"40px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {postIndex !== posts.length && (\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"0.2rem\",\n                      backgroundColor: \"#000000\",\n                    }}\n                  ></div>\n                )}\n              </div>\n            </article>\n          );\n        })} */}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY年MM月DD日\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}