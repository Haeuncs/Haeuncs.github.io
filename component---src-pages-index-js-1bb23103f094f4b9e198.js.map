{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es7.object.entries.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./src/components/Utterances.tsx","webpack:///./src/pages/GuestBook.js"],"names":["$export","$entries","S","entries","it","TItleSpan","styled","span","DateSpan","BlogIndex","props","changePageHandler","type","console","log","setState","pageType","state","render","data","this","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","postIndex","location","map","node","frontmatter","fields","slug","key","style","height","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","display","justifyContent","alignItems","length","width","backgroundColor","React","Component","pageQuery","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","i","result","call","push","Utterances","memo","repo","theme","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","crossOrigin","async","Object","forEach","value","setAttribute","current","appendChild","ref","displayName","GuestBookWrapper","div","media","lessThan","GuestBook","color","fontSize","textShadow"],"mappings":"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","file":"component---src-pages-index-js-1bb23103f094f4b9e198.js","sourcesContent":["// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React, { useState } from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { rhythm } from \"../utils/typography\";\n\nimport \"../../css/style.css\";\nimport styled from \"styled-components\";\nimport GuestBook from \"./GuestBook\";\n\nconst TItleSpan = styled.span`\n  font-size: 26px;\n  font-weight: 900;\n\n  text-decoration: none;\n`;\nconst DateSpan = styled.span`\n  font-size: 18px;\n  font-weight: 900;\n  color: #07de44;\n  text-decoration: none;\n`;\nclass BlogIndex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageType: \"post\",\n    };\n  }\n\n  changePageHandler = (type) => {\n    console.log(type);\n    this.setState({ pageType: type });\n  };\n\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n    var postIndex = 0;\n\n    const post = () => (\n      <>\n        <SEO title=\"All posts\" />\n        {posts.map(({ node }) => {\n          postIndex = postIndex + 1;\n\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <article key={node.fields.slug}>\n              <div style={{ height: \"30px\" }}></div>\n              <header>\n                <TItleSpan\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </TItleSpan>\n                <br></br>\n                <DateSpan>{node.frontmatter.date}</DateSpan>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n              <div\n                style={{\n                  height: \"40px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {postIndex !== posts.length && (\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"0.2rem\",\n                      backgroundColor: \"#000000\",\n                    }}\n                  ></div>\n                )}\n              </div>\n            </article>\n          );\n        })}\n      </>\n    );\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        {post()}\n        {/* <SEO title=\"All posts\" /> */}\n        {/* <Bio /> */}\n        {/* {posts.map(({ node }) => {\n          postIndex = postIndex + 1;\n\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <article key={node.fields.slug}>\n              <div style={{ height: \"30px\" }}></div>\n              <header>\n                <TItleSpan\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </TItleSpan>\n                <br></br>\n                <DateSpan>{node.frontmatter.date}</DateSpan>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n              <div\n                style={{\n                  height: \"40px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                {postIndex !== posts.length && (\n                  <div\n                    style={{\n                      width: \"100%\",\n                      height: \"0.2rem\",\n                      backgroundColor: \"#000000\",\n                    }}\n                  ></div>\n                )}\n              </div>\n            </article>\n          );\n        })} */}\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"YYYY년MM월DD일\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","import React, { createRef, useLayoutEffect } from \"react\";\n\nconst src = \"https://utteranc.es/client.js\";\n\nexport interface IUtterancesProps {\n  repo: string;\n  theme: string;\n}\n\nconst Utterances: React.FC<IUtterancesProps> = React.memo(({ repo, theme }) => {\n  const containerRef = createRef<HTMLDivElement>();\n\n  useLayoutEffect(() => {\n    const utterances = document.createElement(\"script\");\n\n    const attributes = {\n      src,\n      repo,\n      theme,\n      \"issue-term\": \"pathname\",\n      label: \"세상에마상에댓글이달렸다니\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    containerRef.current!.appendChild(utterances);\n  }, [repo]);\n\n  return <div ref={containerRef} />;\n});\n\nUtterances.displayName = \"Utterances\";\n\nexport default Utterances;\n","import React from \"react\";\nimport Utterances from \"../components/Utterances\";\nimport Layout from \"../components/layout\";\nimport styled from \"styled-components\";\n\nconst GuestBookWrapper = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  ${media.lessThan(\"medium\")`\n  height: initial;\n  overflow: initial;\n`}\n`;\nconst GuestBook = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <GuestBookWrapper>\n        <div\n          style={{\n            color: \"#07de44\",\n            fontSize: \"5rem\",\n            textShadow:\n              \"10px 0 0 #f50ff5, -10px 0 0 #fff, 0 10px 0 #fff, 0 -10px 0 #fff, 10px 10px #fff, -10px -10px 0 #fff, 10px -10px 0 #fff, -10px 10px 0 #fff\",\n          }}\n        >\n          GUEST BOOK\n        </div>\n        <div\n          style={{\n            backgroundColor: \"#000\",\n            color: \"#fff\",\n            fontSize: \"1.5rem\",\n          }}\n        >\n          술 한잔 마셨습니다... 블로그 글이 별로라고 생각하셔도 좋습니다. 하지만\n          제 마음 하나만 기억해주세요. 진심을 다해 전합니다. 글이 별로 일 수\n          있습니다. 5분이나 고민하고 개발했습니다... 최선을 다했고 열심히\n          했습니다. 저의 진심이 느껴지길 바랍니다 고맙습니다... - by 블로그 쥔장\n        </div>\n        <div style={{ width: \"100%\", height: \"100%\" }}>\n          <Utterances repo=\"Haeuncs/Haeuncs.github.io\" theme=\"github-light\" />\n        </div>\n      </GuestBookWrapper>\n    </Layout>\n  );\n};\n\nexport default GuestBook;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}