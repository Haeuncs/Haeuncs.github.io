{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019-09-20-iOS 와 javascript 연동하기/","result":{"data":{"site":{"siteMetadata":{"title":"@_@"}},"markdownRemark":{"id":"6500d56a-01f6-5efe-8393-4e8709880a98","excerpt":"Web 화면을 iOS앱에서 마치 앱처럼 보여주는 앱들이 많아졌고 저 또한 기존 앱의 화면을 web으로 바꾸는 작업을 했고 방법을 공유합니다 👻 Java Script → iOS로 이벤트 전달","html":"<p>Web 화면을 iOS앱에서 마치 앱처럼 보여주는 앱들이 많아졌고 저 또한 기존 앱의 화면을 web으로 바꾸는 작업을 했고 방법을 공유합니다 👻</p>\n<h1>Java Script → iOS로 이벤트 전달</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    window<span class=\"token punctuation\">.</span>webkit<span class=\"token punctuation\">.</span>messageHandlers<span class=\"token punctuation\">.</span>여기에Swift에서 인식할 이름을 써주세요<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nonClick 이벤트 로 이렇게 호출하면 iOS 상으로 message를 받을 수 있다.\n\njavascript 에서 post Message로 String 타입과 JSON 타입 2개를 보낸다면\n\n예로들어,\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>JavaScript\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">scriptHandler</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> itemJson <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        window<span class=\"token punctuation\">.</span>webkit<span class=\"token punctuation\">.</span>messageHandlers<span class=\"token punctuation\">.</span>여기에Swift에서 인식할 이름을 써주세요<span class=\"token punctuation\">.</span><span class=\"token function\">postMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"recommendItem\"</span><span class=\"token punctuation\">,</span>\n          value<span class=\"token punctuation\">:</span> itemJson\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\n이런 식으로 iOS로 보낼 수 있습니다.\n\nWKWebView 를 설정할 때 있는 configuration 이 java script 와 연결을 도와준다.\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>Swift\n\n    <span class=\"token keyword\">let</span> contentController <span class=\"token operator\">=</span> <span class=\"token function\">WKUserContentController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    contentController<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"여기에Swift에서 인식할 이름을 써주세요\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> configuration <span class=\"token operator\">=</span> <span class=\"token function\">WKWebViewConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    configuration<span class=\"token punctuation\">.</span>userContentController <span class=\"token operator\">=</span> contentController\n\n    self<span class=\"token punctuation\">.</span>webView <span class=\"token operator\">=</span> <span class=\"token function\">WKWebView</span><span class=\"token punctuation\">(</span>frame<span class=\"token punctuation\">:</span>view<span class=\"token punctuation\">.</span>bounds<span class=\"token punctuation\">,</span> configuration<span class=\"token punctuation\">:</span> configuration<span class=\"token punctuation\">)</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\n그 다음 js 에서 message를 보낼때 마다 받을 수 있도록\n\n</span><span class=\"token template-punctuation string\">`</span></span>WKScriptMessageHandler<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> 프로토콜을 작성한다.\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>Swift\n\n    extension HomeViewController<span class=\"token punctuation\">:</span> WKScriptMessageHandler <span class=\"token punctuation\">{</span>\n    func <span class=\"token function\">userContentController</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">_ userContentController<span class=\"token punctuation\">:</span> WKUserContentController<span class=\"token punctuation\">,</span> didReceive message<span class=\"token punctuation\">:</span> WKScriptMessage</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> json <span class=\"token operator\">=</span> message<span class=\"token punctuation\">.</span>body <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>String<span class=\"token punctuation\">:</span>Any<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">,</span> <span class=\"token keyword\">let</span> jsonType <span class=\"token operator\">=</span> json<span class=\"token punctuation\">[</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span><span class=\"token operator\">?</span> String<span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">switch</span> jsonType <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">case</span> <span class=\"token string\">\"recommendItem\"</span><span class=\"token punctuation\">:</span>\n    \t\t\t\t<span class=\"token comment\">// 여기서 해야할 것들 정의 :)</span>\n          <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`\n\n끝 <span class=\"token operator\">!</span>\n\n## Any question<span class=\"token operator\">?</span>🙋‍\n\n코드에 문제가 있거나 어떤 질문이든 편하게 메일을 보내주세요<span class=\"token operator\">!</span>\n\nPlease email me <span class=\"token keyword\">with</span> any questions or concerns<span class=\"token operator\">!</span> 😃<span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n💌 <span class=\"token punctuation\">:</span> haeun<span class=\"token punctuation\">.</span>developer@gmail<span class=\"token punctuation\">.</span>com</code></pre></div>","frontmatter":{"title":"iOS 와 javascript 연동하기","date":"September 20, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019-09-20-iOS 와 javascript 연동하기/","previous":{"fields":{"slug":"/2019-08-05-Swift Zeplin Style Shadow/"},"frontmatter":{"title":"Swift Zeplin Style Shadow 추가하기"}},"next":{"fields":{"slug":"/2019-10-13-js 딕셔너리 값 존재하는지 확인하기/"},"frontmatter":{"title":"js 딕셔너리 값 존재하는지 확인하기"}}}}}