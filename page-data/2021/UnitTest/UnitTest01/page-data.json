{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021/UnitTest/UnitTest01/","result":{"data":{"site":{"siteMetadata":{"title":"2021"}},"markdownRemark":{"id":"8a3b3b27-b2fc-51b8-9c13-a41ae89298dd","excerpt":"Unit Test 를 시작하는 사람들을 위한 글 (with Swift) 1 Unit Test란? 작성한 코드가 제대로 동작하는지 확인하여 안정성을 높이고 계속해서 수정되는 코드들에 unit test…","html":"<h1 id=\"unit-test-를-시작하는-사람들을-위한-글-with-swift-1\" style=\"position:relative;\"><a href=\"#unit-test-%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EC%82%AC%EB%9E%8C%EB%93%A4%EC%9D%84-%EC%9C%84%ED%95%9C-%EA%B8%80-with-swift-1\" aria-label=\"unit test 를 시작하는 사람들을 위한 글 with swift 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unit Test 를 시작하는 사람들을 위한 글 (with Swift) 1</h1>\n<h2 id=\"unit-test란\" style=\"position:relative;\"><a href=\"#unit-test%EB%9E%80\" aria-label=\"unit test란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unit Test란?</h2>\n<p>작성한 코드가 제대로 동작하는지 확인하여 안정성을 높이고 계속해서 수정되는 코드들에 unit test를 수행하여 수정한 코드가 안전하다는 것을 검증해줍니다.\n테스트 커버리지가 높을 수록 버그에 대한 공포도 줄여줍니다.\n또한 테스트 코드를 위한 코드를 작성하다보면 자연스럽게 dependency injection을 지키게 됩니다.</p>\n<h1 id=\"first\" style=\"position:relative;\"><a href=\"#first\" aria-label=\"first permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>F.I.R.S.T</h1>\n<h2 id=\"fast---테스트는-빨리-돌아야-한다\" style=\"position:relative;\"><a href=\"#fast---%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EB%B9%A8%EB%A6%AC-%EB%8F%8C%EC%95%84%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"fast   테스트는 빨리 돌아야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fast - 테스트는 빨리 돌아야 한다.</h2>\n<h2 id=\"independent---각-테스트는-의존하면-안-된다\" style=\"position:relative;\"><a href=\"#independent---%EA%B0%81-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%9D%98%EC%A1%B4%ED%95%98%EB%A9%B4-%EC%95%88-%EB%90%9C%EB%8B%A4\" aria-label=\"independent   각 테스트는 의존하면 안 된다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Independent - 각 테스트는 의존하면 안 된다.</h2>\n<h2 id=\"repeatable---테스트는-어떤-환경에서도-반복-가능해야-한다\" style=\"position:relative;\"><a href=\"#repeatable---%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%96%B4%EB%96%A4-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EB%8F%84-%EB%B0%98%EB%B3%B5-%EA%B0%80%EB%8A%A5%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"repeatable   테스트는 어떤 환경에서도 반복 가능해야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Repeatable - 테스트는 어떤 환경에서도 반복 가능해야 한다.</h2>\n<p>Real, QA, Network 연결 여부 등 어떠한 환경에서도 실행 가능해야 한다. 테스트가 돌아가지 않는 환경이 있다면 테스트가 실패하는 변명이 생긴다.</p>\n<h2 id=\"self-vaildating---테스트는-실패-혹은-성공-즉-bool값으로-결과를-내야-한다\" style=\"position:relative;\"><a href=\"#self-vaildating---%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%8B%A4%ED%8C%A8-%ED%98%B9%EC%9D%80-%EC%84%B1%EA%B3%B5-%EC%A6%89-bool%EA%B0%92%EC%9C%BC%EB%A1%9C-%EA%B2%B0%EA%B3%BC%EB%A5%BC-%EB%82%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"self vaildating   테스트는 실패 혹은 성공 즉 bool값으로 결과를 내야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Self-Vaildating - 테스트는 실패 혹은 성공, 즉 Bool값으로 결과를 내야 한다.</h2>\n<h2 id=\"timely---테스트는-적시에-작성해야-한다-unit-test는-테스트하려는-실제-코드를-구현하기-직전에-구현한다\" style=\"position:relative;\"><a href=\"#timely---%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%A0%81%EC%8B%9C%EC%97%90-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4-unit-test%EB%8A%94-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EB%A0%A4%EB%8A%94-%EC%8B%A4%EC%A0%9C-%EC%BD%94%EB%93%9C%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%A7%81%EC%A0%84%EC%97%90-%EA%B5%AC%ED%98%84%ED%95%9C%EB%8B%A4\" aria-label=\"timely   테스트는 적시에 작성해야 한다 unit test는 테스트하려는 실제 코드를 구현하기 직전에 구현한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Timely - 테스트는 적시에 작성해야 한다. unit test는 테스트하려는 실제 코드를 구현하기 직전에 구현한다.</h2>\n<p>실제 코드를 구현한 다음 테스트 코드를 작성하면 실제 코드가 테스트할 수 없도록 작성되어 있거나 작성하기 어렵게 작성되어 있을 수 있다.\n(TDD 방법론)</p>\n<h1 id=\"unit-test-작성-시작하기\" style=\"position:relative;\"><a href=\"#unit-test-%EC%9E%91%EC%84%B1-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\" aria-label=\"unit test 작성 시작하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Unit test 작성 시작하기</h1>\n<p>Unit test target 을 만들고 Unit Test 파일을 생성하면 아래와 같은 코드가 기본으로 생성됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">import</span> <span class=\"token builtin\">XCTest</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">TestTests</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">XCTestCase</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 매번 test 함수가 실행 되기 전에 실행되는 함수</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">setUpWithError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// 매번 test 함수가 실행 된 후 실행되는 함수</span>\n    <span class=\"token keyword\">override</span> <span class=\"token keyword\">func</span> <span class=\"token function\">tearDownWithError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// test prefix가 붙은 함수들은 모두 unit test 로 실행 가능한 함수</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">testExample</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"테스트-함수의-naming\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A8%EC%88%98%EC%9D%98-naming\" aria-label=\"테스트 함수의 naming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테스트 함수의 Naming</h2>\n<h3 id=\"애플-document-에서-제공된-예제로-보는-함수명\" style=\"position:relative;\"><a href=\"#%EC%95%A0%ED%94%8C-document-%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%EB%90%9C-%EC%98%88%EC%A0%9C%EB%A1%9C-%EB%B3%B4%EB%8A%94-%ED%95%A8%EC%88%98%EB%AA%85\" aria-label=\"애플 document 에서 제공된 예제로 보는 함수명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>애플 Document 에서 제공된 예제로 보는 함수명</h3>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token function\">testEmptyTableRowAndColumnCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">testUnreachableURLAccessThrowsAnError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token function\">testUserJSONFeedParsing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"필자가-선호하는-naming\" style=\"position:relative;\"><a href=\"#%ED%95%84%EC%9E%90%EA%B0%80-%EC%84%A0%ED%98%B8%ED%95%98%EB%8A%94-naming\" aria-label=\"필자가 선호하는 naming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>필자가 선호하는 naming</h4>\n<p>func test<em>메서드 명</em>with파라미터_should테스트결과() 에 맞춰서 작성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">test_saveMemo_withNullName_shouldFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">test_saveMemo_withNameAndNullDate_shouldFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"error-assert-문\" style=\"position:relative;\"><a href=\"#error-assert-%EB%AC%B8\" aria-label=\"error assert 문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Error Assert 문</h2>\n<p><a href=\"https://developer.apple.com/documentation/xctest/error_assertions\">https://developer.apple.com/documentation/xctest/error_assertions</a></p>\n<h3 id=\"assert-tip\" style=\"position:relative;\"><a href=\"#assert-tip\" aria-label=\"assert tip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Assert Tip</h3>\n<p>XCTAssertTrue 보다는 XCTAssertEqual 을 사용하는 쪽이 좋습니다.\nXCTAssertTrue, False 등 실패 할 경우 실패된 값을 알려주지 않지만\nXCTAssertEqual 은 실패 원인이 되는 값을 에러로 표시해줍니다.</p>\n<h2 id=\"optional을-벗기기\" style=\"position:relative;\"><a href=\"#optional%EC%9D%84-%EB%B2%97%EA%B8%B0%EA%B8%B0\" aria-label=\"optional을 벗기기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Optional을 벗기기</h2>\n<p>guard 문 혹은 if let 을 사용할 수도 있지만 xcode11 부터 제공되는 XCTUnwrap 을 사용하여 optional을 벗길 수 있습니다.\noptional을 벗길 때 실패한 경우 XCTFail 으로 실패를 알리는 코드를 명시적으로 작성하지 않아도 오류를 알려줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">func</span> <span class=\"token function\">test_createMemo_withNullDate_shouldFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> memo<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Memo</span><span class=\"token operator\">?</span> <span class=\"token operator\">=</span> <span class=\"token function\">Memo</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">:</span> <span class=\"token constant\">nil</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> <span class=\"token keyword\">try</span> <span class=\"token function\">XCTUnwrap</span><span class=\"token punctuation\">(</span>memo<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"given---when---then\" style=\"position:relative;\"><a href=\"#given---when---then\" aria-label=\"given   when   then permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GIVEN - WHEN - THEN</h2>\n<p>명시적으로 given-when-then 을 작성하여 읽기 쉽도록 작성합니다.\n여러 test 에서 공통적으로 사용되는 given, when 이라면 공통 함수를 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"swift\"><pre class=\"language-swift\"><code class=\"language-swift\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MemoTests</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">XCTestCase</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">func</span> <span class=\"token function\">createMemo</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token builtin\">String</span><span class=\"token operator\">?</span> <span class=\"token operator\">=</span> <span class=\"token constant\">nil</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Date</span><span class=\"token operator\">?</span> <span class=\"token operator\">=</span> <span class=\"token constant\">nil</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">Memo</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> date <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">let</span> date <span class=\"token operator\">=</span> <span class=\"token builtin\">DateFormatter</span><span class=\"token punctuation\">.</span>shared<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Memo</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">:</span> date<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">func</span> <span class=\"token function\">test_saveMemo_withNullName_shouldFail</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 비동기 테스트를 위한 expectation</span>\n        <span class=\"token keyword\">let</span> expt <span class=\"token operator\">=</span> <span class=\"token function\">expectation</span><span class=\"token punctuation\">(</span>description<span class=\"token punctuation\">:</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token delimiter variable\">\\(</span>#function<span class=\"token delimiter variable\">)</span></span>\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// GIVEN</span>\n        <span class=\"token keyword\">let</span> memo <span class=\"token operator\">=</span> <span class=\"token function\">createMemo</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token constant\">nil</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">:</span> <span class=\"token function\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token comment\">// WHEN</span>\n        <span class=\"token keyword\">var</span> isSuccess <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n        memo<span class=\"token punctuation\">.</span>save <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">(</span>success<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span>\n            isSuccess <span class=\"token operator\">=</span> success\n            expt<span class=\"token punctuation\">.</span><span class=\"token function\">fulfill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">//  timeout 시간 전까지 fulfill이 실행되지 않을 경우 error</span>\n        <span class=\"token function\">waitForExpectations</span><span class=\"token punctuation\">(</span>timeout<span class=\"token punctuation\">:</span> defaultTimeout<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> error <span class=\"token keyword\">in</span>\n            <span class=\"token function\">XCTAssertNil</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">,</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// TEHN</span>\n        <span class=\"token function\">XCTAssertTrue</span><span class=\"token punctuation\">(</span>isSuccess<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2021/UnitTest/UnitTest01/#unit-test-%EB%A5%BC-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EC%82%AC%EB%9E%8C%EB%93%A4%EC%9D%84-%EC%9C%84%ED%95%9C-%EA%B8%80-with-swift-1\">Unit Test 를 시작하는 사람들을 위한 글 (with Swift) 1</a></p>\n<ul>\n<li><a href=\"/2021/UnitTest/UnitTest01/#unit-test%EB%9E%80\">Unit Test란?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021/UnitTest/UnitTest01/#first\">F.I.R.S.T</a></p>\n<ul>\n<li><a href=\"/2021/UnitTest/UnitTest01/#fast---%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EB%B9%A8%EB%A6%AC-%EB%8F%8C%EC%95%84%EC%95%BC-%ED%95%9C%EB%8B%A4\">Fast - 테스트는 빨리 돌아야 한다.</a></li>\n<li><a href=\"/2021/UnitTest/UnitTest01/#independent---%EA%B0%81-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%9D%98%EC%A1%B4%ED%95%98%EB%A9%B4-%EC%95%88-%EB%90%9C%EB%8B%A4\">Independent - 각 테스트는 의존하면 안 된다.</a></li>\n<li><a href=\"/2021/UnitTest/UnitTest01/#repeatable---%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%96%B4%EB%96%A4-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EB%8F%84-%EB%B0%98%EB%B3%B5-%EA%B0%80%EB%8A%A5%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\">Repeatable - 테스트는 어떤 환경에서도 반복 가능해야 한다.</a></li>\n<li><a href=\"/2021/UnitTest/UnitTest01/#self-vaildating---%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%8B%A4%ED%8C%A8-%ED%98%B9%EC%9D%80-%EC%84%B1%EA%B3%B5-%EC%A6%89-bool%EA%B0%92%EC%9C%BC%EB%A1%9C-%EA%B2%B0%EA%B3%BC%EB%A5%BC-%EB%82%B4%EC%95%BC-%ED%95%9C%EB%8B%A4\">Self-Vaildating - 테스트는 실패 혹은 성공, 즉 Bool값으로 결과를 내야 한다.</a></li>\n<li><a href=\"/2021/UnitTest/UnitTest01/#timely---%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%8A%94-%EC%A0%81%EC%8B%9C%EC%97%90-%EC%9E%91%EC%84%B1%ED%95%B4%EC%95%BC-%ED%95%9C%EB%8B%A4-unit-test%EB%8A%94-%ED%85%8C%EC%8A%A4%ED%8A%B8%ED%95%98%EB%A0%A4%EB%8A%94-%EC%8B%A4%EC%A0%9C-%EC%BD%94%EB%93%9C%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%A7%81%EC%A0%84%EC%97%90-%EA%B5%AC%ED%98%84%ED%95%9C%EB%8B%A4\">Timely - 테스트는 적시에 작성해야 한다. unit test는 테스트하려는 실제 코드를 구현하기 직전에 구현한다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021/UnitTest/UnitTest01/#unit-test-%EC%9E%91%EC%84%B1-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0\">Unit test 작성 시작하기</a></p>\n<ul>\n<li>\n<p><a href=\"/2021/UnitTest/UnitTest01/#%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%95%A8%EC%88%98%EC%9D%98-naming\">테스트 함수의 Naming</a></p>\n<ul>\n<li>\n<p><a href=\"/2021/UnitTest/UnitTest01/#%EC%95%A0%ED%94%8C-document-%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%EB%90%9C-%EC%98%88%EC%A0%9C%EB%A1%9C-%EB%B3%B4%EB%8A%94-%ED%95%A8%EC%88%98%EB%AA%85\">애플 Document 에서 제공된 예제로 보는 함수명</a></p>\n<ul>\n<li><a href=\"/2021/UnitTest/UnitTest01/#%ED%95%84%EC%9E%90%EA%B0%80-%EC%84%A0%ED%98%B8%ED%95%98%EB%8A%94-naming\">필자가 선호하는 naming</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2021/UnitTest/UnitTest01/#error-assert-%EB%AC%B8\">Error Assert 문</a></p>\n<ul>\n<li><a href=\"/2021/UnitTest/UnitTest01/#assert-tip\">Assert Tip</a></li>\n</ul>\n</li>\n<li><a href=\"/2021/UnitTest/UnitTest01/#optional%EC%9D%84-%EB%B2%97%EA%B8%B0%EA%B8%B0\">Optional을 벗기기</a></li>\n<li><a href=\"/2021/UnitTest/UnitTest01/#given---when---then\">GIVEN - WHEN - THEN</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Unit Test 를 시작하는 사람들을 위한 글 (with Swift) 1","date":"2021年06月22日","description":"이것만 보면 나도 Unit test 작성할 수 있다!"}}},"pageContext":{"slug":"/2021/UnitTest/UnitTest01/","previous":{"fields":{"slug":"/2021/미니멀 강릉여행/"},"frontmatter":{"title":"210611~210612 1박 2일 미니멀 강릉여행"}},"next":{"fields":{"slug":"/2021/입사후1년을돌아본다/"},"frontmatter":{"title":"입사 후 1년"}}}},"staticQueryHashes":["426816048","63159454"]}